import json
import requests
from collections import defaultdict
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
with open('olx_ads.json', 'r') as f:
    data = json.load(f)

ads = data.get("ads", [])

TELEGRAM_BOT_TOKEN = "8079356951:AAHCpC7ZNUyLacLHBPOjxL09hRVUsYRfBRU"
TELEGRAM_CHAT_ID = "-1002590092233"
SENT_ADS_FILE = 'sent_ads.json'
MARKET_PRICES_FILE = 'market_prices.json'

def send_to_telegram(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": message,
        "parse_mode": "HTML"
    }
    response = requests.post(url, data=payload)
    return response

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Å—ã–ª–æ–∫ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
def load_sent_ads():
    if os.path.exists(SENT_ADS_FILE):
        with open(SENT_ADS_FILE, 'r') as f:
            return json.load(f)
    return {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
def save_sent_ads(sent_ads):
    with open(SENT_ADS_FILE, 'w') as f:
        json.dump(sent_ads, f, indent=4)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ü–µ–Ω–∞—Ö, –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
try:
    with open(MARKET_PRICES_FILE, 'r') as f:
        market_prices = json.load(f)
except (FileNotFoundError, json.JSONDecodeError):
    market_prices = {}

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Å—ã–ª–∫–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
sent_ads = load_sent_ads()

# –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ü–µ–Ω—ã –ø–æ (model, year)
price_groups = defaultdict(list)

for ad in ads:
    details = ad.get("details", {})
    model = details.get("Model") or details.get("Model pojazdu")
    year = details.get("Rok produkcji")
    price_text = ad.get("price", "")
    try:
        price_number = int(price_text.replace("z≈Ç", "").replace(" ", "").strip())
    except (ValueError, AttributeError):
        continue

    if model and year:
        price_groups[(model, year)].append(price_number)

# –û–±–Ω–æ–≤–ª—è–µ–º –∏ —É—Å—Ä–µ–¥–Ω—è–µ–º —Ü–µ–Ω—ã
for key, prices in price_groups.items():
    model, year = key
    market_key = f"{model}-{year}"
    new_avg = int(sum(prices) / len(prices))

    if market_key in market_prices:
        old_avg = market_prices[market_key]
        market_prices[market_key] = int((old_avg + new_avg) / 2)
    else:
        market_prices[market_key] = new_avg

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —Ü–µ–Ω—ã –≤ —Ñ–∞–π–ª
with open(MARKET_PRICES_FILE, 'w') as f:
    json.dump(market_prices, f, indent=4)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram, –µ—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–∏–∂–µ —Ä—ã–Ω–æ—á–Ω–æ–π
for ad in ads:
    details = ad.get("details", {})
    model = details.get("Model") or details.get("Model pojazdu", "N/A")
    year = details.get("Rok produkcji", "N/A")
    price_text = ad.get("price", "N/A")
    ad_link = ad.get("link")  # –°—Å—ã–ª–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è

    try:
        price_number = int(price_text.replace("z≈Ç", "").replace(" ", "").strip())
    except (ValueError, AttributeError):
        continue

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    if ad_link in sent_ads:
        continue

    market_key = f"{model}-{year}"
    if market_key in market_prices and price_number:
        market_price = market_prices[market_key]
        if price_number < market_price * 0.5:  # –µ—Å–ª–∏ 0.6, —Ç–æ –Ω–∞ 40% –¥–µ—à–µ–≤–ª–µ –µ—Å–ª–∏ 0.3 —Ç–æ –Ω–∞ 70% –¥–µ—à–µ–≤–ª–µ
            message = f"üî• <b>JEST!</b>\nModel: {model}\nROK: {year}\nCENA: {price_text}\n<a href='{ad_link}'>Zobaƒá</a>"
            send_to_telegram(message)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            sent_ads[ad_link] = True

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
save_sent_ads(sent_ads)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ GitHub
def push_to_github():
    os.system("git config --global user.name 'github-actions'")
    os.system("git config --global user.email 'github-actions@github.com'")
    os.system("git add sent_ads.json")
    os.system("git add market_prices.json")
    os.system('git commit -m "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π" || echo "No changes to commit"')
    os.system("git push")

# –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ GitHub
push_to_github()
